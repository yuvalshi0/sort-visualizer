{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Yuval Shimon\\\\Desktop\\\\Work\\\\sort-visualizer-master\\\\sort-visual\\\\src\\\\Graph.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Form from \"./Form.js\";\nimport io from \"socket.io-client\";\nimport \"../node_modules/bootstrap/scss/bootstrap.scss\";\nimport \"./Form.css\";\n\nvar Graph = function (_React$Component) {\n  _inherits(Graph, _React$Component);\n\n  var _super = _createSuper(Graph);\n\n  function Graph(props) {\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: _toConsumableArray(Array(80).keys()),\n      algorithms: [\"DEFAULT\"],\n      swap: [],\n      count: 0\n    };\n    _this.Generate = _this.Generate.bind(_assertThisInitialized(_this));\n    _this.StartSort = _this.StartSort.bind(_assertThisInitialized(_this));\n    _this.updateData = _this.updateData.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"/algorithms\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          algorithms: data.data\n        });\n      });\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData(swap) {\n      if (swap.length > 0) {\n        var data = this.state.data.slice();\n        var temp = data[swap[0]];\n        data[swap[0]] = data[swap[1]];\n        data[swap[0]] = temp;\n        this.setState({\n          data: data\n        });\n      }\n    }\n  }, {\n    key: \"Generate\",\n    value: function Generate(start, end, amount) {\n      var _this3 = this;\n\n      postData(\"/generate\", {\n        data: {\n          start: start,\n          end: end,\n          count: amount\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this3.setState({\n          data: data.data\n        });\n      });\n    }\n  }, {\n    key: \"StartSort\",\n    value: function StartSort(algorithm) {\n      var _this4 = this;\n\n      var socket = io.connect(\"/sort\");\n      socket.on(\"connect\", function () {\n        socket.emit(\"sort\", {\n          data: {\n            arr: _this4.state.data,\n            interval: 0.01,\n            algorithm: algorithm\n          }\n        });\n\n        _this4.setState({\n          count: 0,\n          init_arr: _this4.state.data\n        });\n      });\n      socket.on(\"swap\", function (res) {\n        var swap = res.swap;\n\n        if (swap.length > 0) {\n          var data = _this4.state.data.slice();\n\n          data = _this4.swap(data, swap[0], swap[1]);\n\n          _this4.setState({\n            data: data,\n            swap: swap,\n            count: ++_this4.state.count\n          });\n        }\n      });\n      socket.on(\"final\", function (res) {\n        var swap = res.swap;\n\n        _this4.setState({\n          swap: swap\n        });\n      });\n    }\n  }, {\n    key: \"swap\",\n    value: function swap(arr, index1, index2) {\n      var temp = arr[index1];\n      arr[index1] = arr[index2];\n      arr[index2] = temp;\n      return arr;\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.setState({\n        data: this.state.init_arr\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var swap = this.state.swap.slice();\n      var button_class_name = \"btn btn-primary\";\n      var ongoing = this.state.swap.length == 0 && this.state.init_arr;\n      var bars = this.state.data.slice().map(function (value, index) {\n        var className = swap.length > 0 && swap.includes(index) ? \"graph-items-swap\" : \"graph-items\";\n        return React.createElement(\"div\", {\n          key: index,\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 9\n          }\n        }, React.createElement(\"div\", {\n          className: className,\n          style: {\n            height: value * 4\n          },\n          title: value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }, React.createElement(Form, {\n        algorithms: this.state.algorithms,\n        onSort: this.StartSort,\n        onGenerate: this.Generate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }), React.createElement(\"div\", {\n        className: \"graph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, bars), React.createElement(\"div\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, \"Swaps: \", this.state.count ? this.state.count : 0), React.createElement(\"div\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, React.createElement(\"button\", {\n        className: ongoing ? button_class_name : button_class_name += ' disabled',\n        onClick: ongoing ? function () {\n          return _this5.refresh();\n        } : function () {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, \"Reset\")));\n    }\n  }]);\n\n  return Graph;\n}(React.Component);\n\nexport default Graph;\n\nfunction postData() {\n  var url,\n      data,\n      response,\n      _args = arguments;\n  return _regeneratorRuntime.async(function postData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"\";\n          data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            mode: \"same-origin\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n            body: JSON.stringify(data)\n          }));\n\n        case 4:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/Yuval Shimon/Desktop/Work/sort-visualizer-master/sort-visual/src/Graph.js"],"names":["React","Form","io","Graph","props","state","data","Array","keys","algorithms","swap","count","Generate","bind","StartSort","updateData","fetch","then","response","json","setState","length","slice","temp","start","end","amount","postData","algorithm","socket","connect","on","emit","arr","interval","init_arr","res","index1","index2","button_class_name","ongoing","bars","map","value","index","className","includes","height","refresh","Component","url","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA;AACA;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,qBAAMC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,EAAN,CADO;AAEXC,MAAAA,UAAU,EAAE,CAAC,SAAD,CAFD;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAOA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,+BAAlB;AAZiB;AAalB;;;;wCAEmB;AAAA;;AAClBG,MAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAACX,IAAD,EAAU;AACd,QAAA,MAAI,CAACc,QAAL,CAAc;AAAEX,UAAAA,UAAU,EAAEH,IAAI,CAACA;AAAnB,SAAd;AACD,OANH;AAOD;;;+BAEUI,I,EAAM;AACf,UAAIA,IAAI,CAACW,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAIf,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBgB,KAAhB,EAAX;AACA,YAAIC,IAAI,GAAGjB,IAAI,CAACI,IAAI,CAAC,CAAD,CAAL,CAAf;AACAJ,QAAAA,IAAI,CAACI,IAAI,CAAC,CAAD,CAAL,CAAJ,GAAgBJ,IAAI,CAACI,IAAI,CAAC,CAAD,CAAL,CAApB;AACAJ,QAAAA,IAAI,CAACI,IAAI,CAAC,CAAD,CAAL,CAAJ,GAAgBa,IAAhB;AAEA,aAAKH,QAAL,CAAc;AACZd,UAAAA,IAAI,EAAEA;AADM,SAAd;AAGD;AACF;;;6BAEQkB,K,EAAOC,G,EAAKC,M,EAAQ;AAAA;;AAC3BC,MAAAA,QAAQ,CAAC,WAAD,EAAc;AAAErB,QAAAA,IAAI,EAAE;AAAEkB,UAAAA,KAAK,EAAEA,KAAT;AAAgBC,UAAAA,GAAG,EAAEA,GAArB;AAA0Bd,UAAAA,KAAK,EAAEe;AAAjC;AAAR,OAAd,CAAR,CACGT,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHH,EAIGF,IAJH,CAIQ,UAACX,IAAD,EAAU;AACd,QAAA,MAAI,CAACc,QAAL,CAAc;AAAEd,UAAAA,IAAI,EAAEA,IAAI,CAACA;AAAb,SAAd;AACD,OANH;AAOD;;;8BAESsB,S,EAAW;AAAA;;AACnB,UAAMC,MAAM,GAAG3B,EAAE,CAAC4B,OAAH,CAAW,OAAX,CAAf;AAEAD,MAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAqB,YAAM;AACzBF,QAAAA,MAAM,CAACG,IAAP,CAAY,MAAZ,EAAoB;AAClB1B,UAAAA,IAAI,EAAE;AACJ2B,YAAAA,GAAG,EAAE,MAAI,CAAC5B,KAAL,CAAWC,IADZ;AAEJ4B,YAAAA,QAAQ,EAAE,IAFN;AAGJN,YAAAA,SAAS,EAAEA;AAHP;AADY,SAApB;;AAOA,QAAA,MAAI,CAACR,QAAL,CAAc;AACZT,UAAAA,KAAK,EAAE,CADK;AAEZwB,UAAAA,QAAQ,EAAE,MAAI,CAAC9B,KAAL,CAAWC;AAFT,SAAd;AAID,OAZD;AAcAuB,MAAAA,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkB,UAACK,GAAD,EAAS;AACzB,YAAI1B,IAAI,GAAG0B,GAAG,CAAC1B,IAAf;;AAEA,YAAIA,IAAI,CAACW,MAAL,GAAc,CAAlB,EAAqB;AACnB,cAAIf,IAAI,GAAG,MAAI,CAACD,KAAL,CAAWC,IAAX,CAAgBgB,KAAhB,EAAX;;AAEAhB,UAAAA,IAAI,GAAG,MAAI,CAACI,IAAL,CAAUJ,IAAV,EAAgBI,IAAI,CAAC,CAAD,CAApB,EAAyBA,IAAI,CAAC,CAAD,CAA7B,CAAP;;AACA,UAAA,MAAI,CAACU,QAAL,CAAc;AACZd,YAAAA,IAAI,EAAEA,IADM;AAEZI,YAAAA,IAAI,EAAEA,IAFM;AAGZC,YAAAA,KAAK,EAAE,EAAE,MAAI,CAACN,KAAL,CAAWM;AAHR,WAAd;AAKD;AACF,OAbD;AAeAkB,MAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmB,UAACK,GAAD,EAAS;AAC1B,YAAI1B,IAAI,GAAG0B,GAAG,CAAC1B,IAAf;;AACA,QAAA,MAAI,CAACU,QAAL,CAAc;AACZV,UAAAA,IAAI,EAAEA;AADM,SAAd;AAGD,OALD;AAMD;;;yBAEIuB,G,EAAKI,M,EAAQC,M,EAAQ;AACxB,UAAIf,IAAI,GAAGU,GAAG,CAACI,MAAD,CAAd;AACAJ,MAAAA,GAAG,CAACI,MAAD,CAAH,GAAcJ,GAAG,CAACK,MAAD,CAAjB;AACAL,MAAAA,GAAG,CAACK,MAAD,CAAH,GAAcf,IAAd;AACA,aAAOU,GAAP;AACD;;;8BAES;AACR,WAAKb,QAAL,CAAc;AACZd,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAW8B;AADL,OAAd;AAGD;;;6BAEQ;AAAA;;AACP,UAAMzB,IAAI,GAAG,KAAKL,KAAL,CAAWK,IAAX,CAAgBY,KAAhB,EAAb;AACA,UAAIiB,iBAAiB,GAAG,iBAAxB;AACA,UAAIC,OAAO,GAAG,KAAKnC,KAAL,CAAWK,IAAX,CAAgBW,MAAhB,IAA0B,CAA1B,IAA+B,KAAKhB,KAAL,CAAW8B,QAAxD;AAEA,UAAMM,IAAI,GAAG,KAAKpC,KAAL,CAAWC,IAAX,CAAgBgB,KAAhB,GAAwBoB,GAAxB,CAA4B,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACzD,YAAIC,SAAS,GAAInC,IAAI,CAACW,MAAL,GAAc,CAAd,IAAmBX,IAAI,CAACoC,QAAL,CAAcF,KAAd,CAApB,GAA4C,kBAA5C,GAAiE,aAAjF;AAEA,eACE;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAiB,UAAA,SAAS,EAAEC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAEA,SADb;AAEE,UAAA,KAAK,EAAE;AAAEE,YAAAA,MAAM,EAAEJ,KAAK,GAAG;AAAlB,WAFT;AAGE,UAAA,KAAK,EAAEA,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AASD,OAZY,CAAb;AAcA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,UAAU,EAAE,KAAKtC,KAAL,CAAWI,UADzB;AAEE,QAAA,MAAM,EAAE,KAAKK,SAFf;AAGE,QAAA,UAAU,EAAE,KAAKF,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB6B,IAAxB,CANF,EAOE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU,KAAKpC,KAAL,CAAWM,KAAX,GAAmB,KAAKN,KAAL,CAAWM,KAA9B,GAAsC,CADhD,CAPF,EAUE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACE,QAAA,SAAS,EAAE6B,OAAO,GAAGD,iBAAH,GAAuBA,iBAAiB,IAAI,WADhE;AAEE,QAAA,OAAO,EAAEC,OAAO,GAAG;AAAA,iBAAM,MAAI,CAACQ,OAAL,EAAN;AAAA,SAAH,GAA0B,YAAM,CAAE,CAFpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAVF,CADF;AAqBD;;;;EA9IiBhD,KAAK,CAACiD,S;;AAiJ1B,eAAe9C,KAAf;;AAEA,SAAewB,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBuB,UAAAA,GAAxB,2DAA8B,EAA9B;AAAkC5C,UAAAA,IAAlC,2DAAyC,EAAzC;AAAA;AAAA,2CAEyBU,KAAK,CAACkC,GAAD,EAAM;AAChCC,YAAAA,MAAM,EAAE,MADwB;AAEhCC,YAAAA,IAAI,EAAE,aAF0B;AAGhCC,YAAAA,KAAK,EAAE,UAHyB;AAIhCC,YAAAA,WAAW,EAAE,aAJmB;AAKhCC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aALuB;AAShCC,YAAAA,QAAQ,EAAE,QATsB;AAUhCC,YAAAA,cAAc,EAAE,aAVgB;AAWhCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetD,IAAf;AAX0B,WAAN,CAF9B;;AAAA;AAEQY,UAAAA,QAFR;AAAA,2CAeSA,QAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from \"react\";\nimport Form from \"./Form.js\";\nimport io from \"socket.io-client\";\nimport \"../node_modules/bootstrap/scss/bootstrap.scss\";\nimport \"./Form.css\";\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [...Array(80).keys()],\n      algorithms: [\"DEFAULT\"],\n      swap: [],\n      count: 0\n    };\n\n    this.Generate = this.Generate.bind(this);\n    this.StartSort = this.StartSort.bind(this);\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"/algorithms\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ algorithms: data.data });\n      });\n  }\n\n  updateData(swap) {\n    if (swap.length > 0) {\n      let data = this.state.data.slice();\n      let temp = data[swap[0]];\n      data[swap[0]] = data[swap[1]];\n      data[swap[0]] = temp;\n\n      this.setState({\n        data: data,\n      });\n    }\n  }\n\n  Generate(start, end, amount) {\n    postData(\"/generate\", { data: { start: start, end: end, count: amount } })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({ data: data.data });\n      });\n  }\n\n  StartSort(algorithm) {\n    const socket = io.connect(\"/sort\");\n\n    socket.on(\"connect\", () => {\n      socket.emit(\"sort\", {\n        data: {\n          arr: this.state.data,\n          interval: 0.01,\n          algorithm: algorithm, //Need to change to - algorithm after server fix\n        },\n      });\n      this.setState({\n        count: 0,\n        init_arr: this.state.data,\n      });\n    });\n\n    socket.on(\"swap\", (res) => {\n      let swap = res.swap;\n\n      if (swap.length > 0) {\n        let data = this.state.data.slice();\n\n        data = this.swap(data, swap[0], swap[1]);\n        this.setState({\n          data: data,\n          swap: swap,\n          count: ++this.state.count,\n        });\n      }\n    });\n\n    socket.on(\"final\", (res) => {\n      let swap = res.swap;\n      this.setState({\n        swap: swap,\n      });\n    });\n  }\n\n  swap(arr, index1, index2) {\n    let temp = arr[index1];\n    arr[index1] = arr[index2];\n    arr[index2] = temp;\n    return arr;\n  }\n\n  refresh() {\n    this.setState({\n      data: this.state.init_arr,\n    });\n  }\n\n  render() {\n    const swap = this.state.swap.slice();\n    let button_class_name = \"btn btn-primary\";\n    let ongoing = this.state.swap.length == 0 && this.state.init_arr\n\n    const bars = this.state.data.slice().map((value, index) => {\n      let className = (swap.length > 0 && swap.includes(index)) ? \"graph-items-swap\" : \"graph-items\";\n\n      return (\n        <div key={index} className={className}>\n          <div\n            className={className}\n            style={{ height: value * 4 }}\n            title={value}\n          ></div>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        <Form\n          algorithms={this.state.algorithms}\n          onSort={this.StartSort}\n          onGenerate={this.Generate}\n        />\n        <div className=\"graph\">{bars}</div>\n        <div className=\"bottom\">\n          Swaps: {this.state.count ? this.state.count : 0}\n        </div>\n        <div className=\"bottom\">\n            <button\n              className={ongoing ? button_class_name : button_class_name += ' disabled'}\n              onClick={ongoing ? () => this.refresh() : () => {}}\n            >\n              Reset\n            </button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n\nasync function postData(url = \"\", data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"same-origin\", // no-cors, *cors, same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n  return response; // parses JSON response into native JavaScript objects\n}\n"]},"metadata":{},"sourceType":"module"}